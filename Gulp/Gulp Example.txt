modules to install:

npm install gulp -g
npm install gulp --save-dev
npm install gulp-sass --save-dev
npm install browser-sync --save-dev
npm install gulp-useref --save-dev
npm install gulp-uglify --save-dev
npm install gulp-cssnano
npm install gulp-imagemin --save-dev
npm install gulp-cache --save-dev
npm install del --save-dev
npm install run-sequence --save-dev

package.json
{
    "name": "project",
    "version": "1.0.0",
    "description": "This repo is a gulp starter for this Gulp tutorial.",
    "main": "gulpfile.js",
    "dependencies": {},
  "devDependencies": {
      "browser-sync": "^2.18.2",
      "del": "^2.2.2",
      "gulp": "^3.9.1",
      "gulp-cache": "^0.4.5",
      "gulp-imagemin": "^3.1.1",
      "gulp-sass": "^2.3.2",
      "gulp-useref": "^3.1.2",
      "run-sequence": "^1.2.2"
  },
  "scripts": {
      "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "Satya",
  "license": "ISC"
}

gulpfile.js

var gulp = require('gulp');
var sass = require('gulp-sass');
var browserSync = require('browser-sync');
var useref = require('gulp-useref');
var uglify = require('gulp-uglify');
var gulpIf = require('gulp-if');
var cssnano = require('gulp-cssnano');
var imagemin = require('gulp-imagemin');
var cache = require('gulp-cache');
var del = require('del');
var runSequence = require('run-sequence');

// Basic Gulp task syntax
gulp.task('hello', function () {
    console.log('Hello Satya...!');
})

//// Development Tasks 
//// -----------------

// start browsersync server
gulp.task('browserSync', function () {
    browserSync({
        server: {
            basedir: 'app'
        }
    })
})

gulp.task('sass', function () {
    return gulp.src('app/scss/**/*.scss') // gets all files ending with .scss in app/scss and children dirs
      .pipe(sass()) // passes it through a gulp-sass
      .pipe(gulp.dest('app/css')) // outputs it in the css folder
      .pipe(browserSync.reload({ // reloading with browser sync
          stream: true
      }));
})

// Watchers
gulp.task('watch', function () {
    gulp.watch('app/scss/**/*.scss', ['sass']);
    gulp.watch('app/*.html', browserSync.reload);
    gulp.watch('app/js/**/*.js', browserSync.reload);
})

// Optimization Tasks 
// ------------------

// Optimizing CSS and JavaScript 
gulp.task('useref', function () {

    return gulp.src('app/*.html')
      .pipe(useref())
      .pipe(gulpIf('*.js', uglify()))
      .pipe(gulpIf('*.css', cssnano()))
      .pipe(gulp.dest('dist'));
});

// Optimizing Images 
gulp.task('images', function () {
    return gulp.src('app/images/**/*.+(png|jpg|jpeg|gif|svg)')
      // Caching images that ran through imagemin
      .pipe(cache(imagemin({
          interlaced: true,
      })))
      .pipe(gulp.dest('dist/images'))
});

// Copying fonts 
gulp.task('fonts', function () {
    return gulp.src('app/fonts/**/*')
      .pipe(gulp.dest('dist/fonts'))
})

// cleaning 
gulp.task('clean:dist', function () {
    return del.sync(['dist/**/*', '!dist/images', '!dist/images/**/*']);
});

//// Build Sequences
//// ---------------

gulp.task('default', function (callback) {
    runSequence(['sass', 'browserSync'], 'watch',
      callback
    )
})

gulp.task('build', function (callback) {
    runSequence(
      'clean:dist',
      'sass',
      ['useref', 'images', 'fonts'],
      callback
    )
})
